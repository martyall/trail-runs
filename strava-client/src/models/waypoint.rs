/*
 * Strava API v3
 *
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Waypoint {
    /// A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.
    #[serde(rename = "latlng", skip_serializing_if = "Option::is_none")]
    pub latlng: Option<Vec<f32>>,
    /// A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.
    #[serde(rename = "target_latlng", skip_serializing_if = "Option::is_none")]
    pub target_latlng: Option<Vec<f32>>,
    /// Categories that the waypoint belongs to
    #[serde(rename = "categories", skip_serializing_if = "Option::is_none")]
    pub categories: Option<Vec<String>>,
    /// A title for the waypoint
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// A description of the waypoint (optional)
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The number meters along the route that the waypoint is located
    #[serde(rename = "distance_into_route", skip_serializing_if = "Option::is_none")]
    pub distance_into_route: Option<i32>,
}

impl Waypoint {
    pub fn new() -> Waypoint {
        Waypoint {
            latlng: None,
            target_latlng: None,
            categories: None,
            title: None,
            description: None,
            distance_into_route: None,
        }
    }
}


